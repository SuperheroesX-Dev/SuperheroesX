import java.util.regex.Pattern

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = pullVersion()

group = "mini.sx" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Superheroes X"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'

}

repositories {
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
    maven {
        name = "ChikenMaven"
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name = 'DVS1 Maven FS'
        url = 'http://dvs1.progwml6.com/files/maven'
    }
}

dependencies {
    deobfProvided "cofh:ThermalExpansion:1.12.2-5.3.9.9:universal"

    deobfCompile "slimeknights.mantle:Mantle:1.12-1.3.2.24"
    deobfCompile "slimeknights:TConstruct:1.12.2-2.9.1.65"

    //deobfProvided "cofh:RedstoneFlux:1.12-2.0.1.2:universal"
    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_${mc_version}:${jei_version}:api"
    // at runtime, use the full JEI jar
    //runtime "mezz.jei:jei_${mc_version}:${jei_version}"
}

minecraft {
    version = "1.12.2-14.23.4.2705"
    runDir = "run"
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

version = "${project.minecraft.version}-${project.version}"

jar {
    classifier = 'universal'
}

def pullVersion() {
    def file = file("src/main/java/mini/sx/util/Reference.java")
    def version = ""
    def pattern = Pattern.compile(" {4}public static final String VERSION = \"([\\d\\.]*)\";\$")
    file.eachLine { String s ->
        def matcher = pattern.matcher(s)
        if (matcher.matches()) {
            version = matcher.group(1)
            return
        }
    }
    return version
}