package mini.SuperheroesX.objects.armor;

// Date: 4/9/2018 10:42:15 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

/*
import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class IronManArmorModel_WIP extends ModelBiped {
    //fields
    ModelRenderer Head;
    ModelRenderer Body;
    ModelRenderer RightArm;
    ModelRenderer LeftArm;
    ModelRenderer RightLeg;
    ModelRenderer LeftLeg;
//    ModelRenderer head;
//    ModelRenderer body;
//    ModelRenderer rightarm;
//    ModelRenderer leftarm;
//    ModelRenderer rightleg;
//    ModelRenderer leftleg;

    public IronManArmorModel_WIP(float i) {
        super(i, 0, 256, 256);
        textureWidth = 256;
        textureHeight = 256;


        Head = new ModelRenderer(this, "Head");
        Head.setRotationPoint(0F, 0F, 0F);
        setRotation(Head, 0F, 0F, 0F);
        Head.mirror = true;
        Head.addBox("Shape1", -4.5F, -8.5F, -4.5F, 9, 9, 9);
        Head.addBox("Shape2", -4F, -9F, -4F, 8, 1, 8);
        Head.addBox("Shape3", -3.5F, -8F, -5F, 7, 8, 1);
        Head.addBox("Shape3", -4F, -8F, 4F, 8, 8, 1);
        Head.addBox("Shape4", 4F, -8F, -4F, 1, 8, 8);
        Head.addBox("Shape4", -5F, -8F, -4F, 1, 8, 8);
        Head.addBox("Shape2", -4F, 0F, -4F, 8, 1, 8);
        bipedHead.addChild(Head);
        Body = new ModelRenderer(this, "Body");
        Body.setRotationPoint(0F, 0F, 0F);
        setRotation(Body, 0F, 0F, 0F);
        Body.mirror = true;
        Body.addBox("Shape5", -4F, 0F, 1.5F, 8, 12, 1);
        Body.addBox("Shape5", -4F, 0F, -2.5F, 8, 12, 1);
        Body.addBox("Shape5", -3.5F, 0.5F, -3F, 7, 11, 1);
        Body.addBox("Shape6", -4.5F, 0F, -2F, 1, 12, 4);
        Body.addBox("Shape6", 3.5F, 0F, -2F, 1, 12, 4);
        Body.addBox("Shape15", -1F, 2F, -3.5F, 2, 4, 1);
        Body.addBox("Shape16", 1F, 3F, -3.5F, 1, 2, 1);
        Body.addBox("Shape16", -2F, 3F, -3.5F, 1, 2, 1);
        bipedBody.addChild(Body);
        RightArm = new ModelRenderer(this, "RightArm");
        RightArm.setRotationPoint(-5F, 2F, 0F);
        setRotation(RightArm, 0F, 0F, 0F);
        RightArm.mirror = true;
        RightArm.addBox("Shape6", 0.5F, -2F, -2F, 1, 13, 4);
        RightArm.addBox("Shape6", -3.5F, -2F, -2F, 1, 13, 4);
        RightArm.addBox("Shape7", -3F, -2.5F, -2F, 4, 1, 4);
        RightArm.addBox("Shape9", -3F, -2F, 1.5F, 4, 13, 1);
        RightArm.addBox("Shape9", -3F, -2F, -2.5F, 4, 13, 1);
        RightArm.addBox("Shape10", -3F, 10F, -2F, 4, 1, 4);
        bipedRightArm.addChild(RightArm);
        LeftArm = new ModelRenderer(this, "LeftArm");
        LeftArm.setRotationPoint(5F, 2F, 0F);
        setRotation(LeftArm, 0F, 0F, 0F);
        LeftArm.mirror = true;
        LeftArm.addBox("Shape6", -1.5F, -2F, -2F, 1, 13, 4);
        LeftArm.addBox("Shape7", -1F, -2.5F, -2F, 4, 1, 4);
        LeftArm.addBox("Shape10", -1F, 10F, -2F, 4, 1, 4);
        LeftArm.addBox("Shape6", 2.5F, -2F, -2F, 1, 13, 4);
        LeftArm.addBox("Shape8", -1F, -2F, 1.5F, 4, 13, 1);
        LeftArm.addBox("Shape8", -1F, -2F, -2.5F, 4, 13, 1);
        bipedLeftArm.addChild(LeftArm);
        RightLeg = new ModelRenderer(this, "RightLeg");
        RightLeg.setRotationPoint(-2F, 12F, 0F);
        setRotation(RightLeg, 0F, 0F, 0F);
        RightLeg.mirror = true;
        RightLeg.addBox("Shape11", -2.5F, 0F, -2F, 1, 12, 4);
        RightLeg.addBox("Shape12", -2F, 0F, 1.5F, 4, 12, 1);
        RightLeg.addBox("Shape12", -2F, 0F, -2.5F, 4, 12, 1);
        RightLeg.addBox("Shape11", 1.5F, 0F, -2F, 1, 12, 4);
        RightLeg.addBox("Shape13", -2F, 11.2F, -2F, 4, 1, 4);
        RightLeg.addBox("Shape14", -2F, -0.2F, -2F, 4, 1, 4);
        bipedRightLeg.addChild(RightLeg);
        LeftLeg = new ModelRenderer(this, "LeftLeg");
        LeftLeg.setRotationPoint(2F, 12F, 0F);
        setRotation(LeftLeg, 0F, 0F, 0F);
        LeftLeg.mirror = true;
        LeftLeg.addBox("Shape11", 1.5F, 0F, -2F, 1, 12, 4);
        LeftLeg.addBox("Shape11", -2.5F, 0F, -2F, 1, 12, 4);
        LeftLeg.addBox("Shape12", -2F, 0F, 1.5F, 4, 12, 1);
        LeftLeg.addBox("Shape12", -2F, 0F, -2.5F, 4, 12, 1);
        LeftLeg.addBox("Shape13", -2F, 11.2F, -2F, 4, 1, 4);
        LeftLeg.addBox("Shape14", -2F, -0.2F, -2F, 4, 1, 4);
        bipedLeftLeg.addChild(LeftLeg);
//      head = new ModelRenderer(this, 0, 0);
//      head.addBox(-4F, -8F, -4F, 8, 8, 8);
//      head.setRotationPoint(0F, 0F, 0F);
//      head.setTextureSize(64, 32);
//      head.mirror = true;
//      setRotation(head, 0F, 0F, 0F);
//      body = new ModelRenderer(this, 16, 16);
//      body.addBox(-4F, 0F, -2F, 8, 12, 4);
//      body.setRotationPoint(0F, 0F, 0F);
//      body.setTextureSize(64, 32);
//      body.mirror = true;
//      setRotation(body, 0F, 0F, 0F);
//      rightarm = new ModelRenderer(this, 40, 16);
//      rightarm.addBox(-3F, -2F, -2F, 4, 12, 4);
//      rightarm.setRotationPoint(-5F, 2F, 0F);
//      rightarm.setTextureSize(64, 32);
//      rightarm.mirror = true;
//      setRotation(rightarm, 0F, 0F, 0F);
//      leftarm = new ModelRenderer(this, 40, 16);
//      leftarm.addBox(-1F, -2F, -2F, 4, 12, 4);
//      leftarm.setRotationPoint(5F, 2F, 0F);
//      leftarm.setTextureSize(64, 32);
//      leftarm.mirror = true;
//      setRotation(leftarm, 0F, 0F, 0F);
//      rightleg = new ModelRenderer(this, 0, 16);
//      rightleg.addBox(-2F, 0F, -2F, 4, 12, 4);
//      rightleg.setRotationPoint(-2F, 12F, 0F);
//      rightleg.setTextureSize(64, 32);
//      rightleg.mirror = true;
//      setRotation(rightleg, 0F, 0F, 0F);
//      leftleg = new ModelRenderer(this, 0, 16);
//      leftleg.addBox(-2F, 0F, -2F, 4, 12, 4);
//      leftleg.setRotationPoint(2F, 12F, 0F);
//      leftleg.setTextureSize(64, 32);
//      leftleg.mirror = true;
//      setRotation(leftleg, 0F, 0F, 0F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        Head.render(f5);
        Body.render(f5);
        RightArm.render(f5);
        LeftArm.render(f5);
        RightLeg.render(f5);
        LeftLeg.render(f5);
//    head.render(f5);
//    body.render(f5);
//    rightarm.render(f5);
//    leftarm.render(f5);
//    rightleg.render(f5);
//    leftleg.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

}*/
